ゲーム企画仕様書（Version 1.0）

【コード現状注釈】:
この仕様書と現行コード（主に `data_structures.go`, `game.go`）の間には、戦闘ロジックやゲーム進行に関して多くの差異が存在します。主なものとして、勝利・敗北条件、戦闘開始シーケンス、時間計算、命中・回避・クリティカル計算、ダメージ計算、攻撃アクションの制約などが挙げられます。詳細は各項目への注釈を参照してください。

1. 勝利・敗北条件

    勝利: 敵チームのリーダー機の頭部パーツの「装甲」を0にする。
    敗北: 味方チームのリーダー機の頭部パーツの「装甲」を0にする。
    【コード現状注釈】: 現行コード (`game.go` の `checkGameEnd`) では、チーム全体のメダロットが全て機能停止 (`StateBroken`) したかどうかで勝敗を判定しています。リーダー機の頭部パーツの状態のみを参照するロジックにはなっていません。メダロット自体は頭部パーツが破壊されると機能停止します (`Medarot.Update`)。

2. 戦闘シーケンス
2.1. 戦闘開始

    戦闘メンバー（自軍3機、敵軍3機）をフィールドに配置。
    各チームのリーダー機を内部的に設定。敵リーダーはプレイヤーには非表示。
    プレイヤーに味方3機の初期行動を入力させる。
    全機体がチャージフェーズへ移行し、戦闘を開始する。
    【コード現状注釈】: 現行コード (`data_structures.go` の `NewMedarot`) では、メダロットは初期状態で行動選択可能 (`StateReadyToSelectAction`) かつゲージMAXで戦闘を開始します。仕様書にあるような「プレイヤーによる3機の初期行動入力」や「全機体のチャージフェーズへの移行」というステップは存在しません。行動選択は各メダロットが行動可能になった時点で個別に行われます。

2.2. 戦闘終了

    勝利または敗北条件が満たされた瞬間にトリガーされる。
    リザルト画面を表示。
    熟練度獲得:
        参加メダルに熟練度ポイントを加算。
        ポイントは「敵の強さ」と「戦闘中の行動回数」に応じて算出。
    パーツドロップ:
        倒した敵が装備していたパーツが、設定された確率でドロップする。
    プレイヤーの確認後、ハブエリア（拠点）へ遷移する。
    ゲームオーバー画面を表示。
    ペナルティ: なし。
    プレイヤーに**「拠点に戻る」か「再挑戦する」**かを選択させる。
        「再挑戦する」を選択した場合、OnBattleStartから処理をやり直す。
    【コード現状注釈】: 現行コードでは、リザルト画面、熟練度獲得、パーツドロップ、ハブエリアへの遷移、および敗北時の「再挑戦」選択ロジックは実装されていません。ゲームオーバーメッセージ表示後、操作不能になります。

3. 戦闘計算式

    以下の式中の定数（500, 0.5, 75, 2.0）は、ゲームバランス調整のため、後から変更可能なグローバル変数として管理することを推奨。

3.1. 時間計算

    チャージ時間 (秒): 500 / (使用パーツの「充填」 + 脚部の「推進」 * 0.5)
    クールダウン時間 (秒): 500 / (使用パーツの「冷却」 + 脚部の「推進」 * 0.5)
    【コード現状注釈】: 現行コード (`data_structures.go` の `Medarot.SelectAction` および `Medarot.Update`) では、パーツの `Charge` 値や `Cooldown` 値が直接的に行動のチャージ/クールダウンゲージの最大値として設定されます。ゲージの増加速度はメダロットの `Speed` と脚部の `Propulsion` に基づいて計算されますが、仕様書に記載の計算式で「秒数」を直接算出しているわけではありません。時間経過の概念はゲージの蓄積によって表現されています。

3.2. 命中・回避・クリティカル計算

    最終計算値の算出:
        最終計算値 = 75 + 攻撃側の「命中」 - 防御側の「機動」 + 技・特性補正
        技・特性補正:
            狙い撃ち: +50
            殴る: +20
            その他: 0
    【コード現状注釈】: 現行コード (`data_structures.go` の `Medarot.ExecuteAction`) の命中計算は `hitChance = 75 + (selectedPart.Accuracy + skillValue*2) - (targetMobility)` です。`skillValue` はメダルの射撃・格闘スキル値であり、仕様書の「技・特性補正」とは異なります。仕様書にある `action_trait` (狙い撃ち、殴る等) に基づく直接的な補正ロジックは存在しません。

    判定:
        もし 最終計算値 <= 0 なら:
            結果: 回避
        もし 0 < 最終計算値 <= 100 なら:
            最終計算値 % の確率で 命中
            残りの確率で 回避
        もし 最終計算値 > 100 なら:
            結果: 命中確定
            (最終計算値 - 100) % の確率で クリティカルヒット発生
    【コード現状注釈】: 現行コードでは、`hitChance` (上記計算式の結果) に基づいて命中判定を行いますが、10%未満の場合は10%に、100%を超える場合は100%に丸められます。クリティカルヒットの判定ロジックは実装されていません。

3.3. ダメージ計算

    基本ダメージ = 攻撃パーツの「威力」
    【コード現状注釈】: 現行コード (`data_structures.go` の `Medarot.ExecuteAction`) では、基本ダメージは `baseDamage = selectedPart.Power + skillValue*3` となっており、メダルのスキル値 (`skillValue`) による補正が含まれます。
    ダメージ軽減値 = 被弾パーツの「耐久」 + 脚部パーツの「耐久」
    【コード現状注釈】: 現行コードでは、ダメージ軽減は被弾パーツの `DefenseParam` のみを参照し、脚部パーツの耐久は考慮されません (`finalDamage = baseDamage - damagedPart.DefenseParam`)。
    素ダメージ = 基本ダメージ - ダメージ軽減値
    クリティカル補正 = クリティカル発生時 ? 2.0 : 1.0
    【コード現状注釈】: クリティカルヒットのロジックがないため、クリティカル補正も実装されていません。
    補正後ダメージ = 素ダメージ * クリティカル補正
    最終ダメージ = Max(1, Floor(補正後ダメージ))
        Floor() は小数点以下切り捨て。ダメージは整数とする。
        Max() により最低ダメージを1に保証。
    【コード現状注釈】: 現行コードでは、最終ダメージが5未満の場合、5に切り上げられます (`if finalDamage < 5 { finalDamage = 5 }`)。仕様書の最低保証ダメージ1とは異なります。

3.4. 攻撃アクションの制約（デメリット）

    「狙い撃ち」「殴る」「我武者羅」を選択した機体は、行動の特定フェーズ（チャージ中/クールダウン中、または両方）で以下の制約を受ける。
    回避不能: 命中・回避計算において、自身の「機動」パラメータが 0 として扱われる。
    防御不能: ダメージ計算において、自身の「耐久」パラメータが 0 として扱われる。
    【コード現状注釈】: 現行コードでは、パーツの `ActionType` が "shoot", "fight", "other" の分類のみで、仕様書にあるような詳細な `action_trait` (狙い撃ち、殴る、我武者羅など) 及び、それに対応する「回避不能」「防御不能」といったデメリット効果は実装されていません。

4. 主要パラメータ定義

    各パラメータは2～3桁の整数を想定。

パラメータ	役割	序盤の数値例	設定箇所
装甲	パーツのHP	腕:80, 頭:100, 脚:120	頭, 腕, 脚
    【コード現状注釈】: 現行コードではパーツの `HP` (CSVでは `base_hp`) に該当。
威力	攻撃の基礎値	30 - 50	頭, 腕
    【コード現状注釈】: 現行コードではパーツの `Power` に該当。
耐久	ダメージ軽減値	10 - 20	頭, 腕, 脚
    【コード現状注釈】: 現行コードではパーツの `DefenseParam` に該当。
命中	命中・クリティカルの基礎値	50 (標準)	頭, 腕
    【コード現状注釈】: 現行コードではパーツの `Accuracy` に該当。
機動	回避の成功判定値	20 - 40	脚
    【コード現状注釈】: 現行コードではパーツの `Mobility` に該当。
充填	チャージ速度	50 - 80	頭, 腕
    【コード現状注釈】: 現行コードではパーツの `Charge` に該当。
冷却	クールダウン速度	50 - 80	頭, 腕
    【コード現状注釈】: 現行コードではパーツの `Cooldown` に該当。
推進	全行動速度への補正	20 - 40	脚
    【コード現状注釈】: 現行コードではパーツの `Propulsion` に該当。

    【コード現状注釈】: 上記パラメータのマッピングは概ね正しいですが、実際のCSVカラム名やコード内の構造体フィールド名とは異なる場合があります (詳細はCSV実装仕様の注釈参照)。また、現行コードの `Part` 構造体には、仕様書にない `Category`, `SubCategory`, `Slot`, `MaxHP`, `IsBroken`, `MovementType`, `SetID`, `ActionType` など、コード固有のフィールドが存在します。